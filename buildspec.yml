version: 0.2

#env:
  #variables:
     # key: "value"
  #parameter-store:
     # key: "value"

phases:
  install:
    commands:
       - "apt update"
       - "apt install -y awscli git"
       - "wget https://github.com/kubernetes/kops/releases/download/1.8.0/kops-linux-amd64"
       - "chmod +x kops-linux-amd64"
       - "mv kops-linux-amd64 /usr/local/bin/kops"
       - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
       - "chmod +x kubectl"
       - "mv ./kubectl /usr/local/bin/kubectl"
       - "wget https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz"
       - "chmod +x ./linux-amd64/helm"
       - "mv ./linux-amd64/helm /usr/local/bin/helm"
#       - "git clone https://github.com/AGWA/git-crypt.git"
#       - "cd git-crypt; make; make install PREFIX=/usr/local; cd -"
  pre_build:
    commands:
      - "mkdir ~/.kube/"
      - "aws s3 cp s3://non-production-cluster-keystore/kubecfg.yaml ~/.kube/config" 
  build:
    commands:
      - "kubectl config get-contexts"
      - "kubectl config use-context non-production.k8s.integration.dsd.io"
      - "kubectl cluster-info"
      - "kubectl get namespaces"
      - "kubectl get pods --all-namespaces"
      # namespace and resource creation
      - "ls namespaces/ | while read file; do kubectl create -f namespaces/$file/namespace.yaml; kubectl apply -f namespaces/$file --namespace=$file; done"
      # namespace deletion
      - NS=$(kubectl get namespaces -o name)
      - echo $NS
      - echo $NS | wc -l
      - DIR=$(find namespaces -type d -mindepth 1)
      - echo $DIR
      - echo $DIR | wc -l
      - LIST=$(echo "$NS"| tr ' ' '\n' | while read LINE; do if ! echo "$DIR" | tr ' ' '\n' | grep -q "$LINE";then echo $LINE; fi; done)
      - echo $LIST
      - echo $LIST | wc -l
      - FILTERED=$(echo "$LIST" | tr ' ' '\n' | grep -v 'namespaces/default\|namespaces/kube-public\|namespaces/kube-system')
      - echo $FILTERED
      - echo $FILTERED | wc -l
      - echo $FILTERED | tr ' ' '\n' | while read LINE; do echo "kubectl delete namespaces $LINE"; done

  post_build:
    commands:
#       - "ls namespaces/ | while read file; do helm init --service-account $file-tiller --tiller-namespace $file; done"

#artifacts:
  #files:
    # - location
  #discard-paths: yes
  #base-directory: location

#cache:
  #paths:
    # - paths
