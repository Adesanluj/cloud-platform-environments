apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: grafana-oauth2-proxy
  name: grafana-oauth2-proxy
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: grafana-oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: grafana-oauth2-proxy
    spec:
      # Populate the arguments below. To generate a cookie-secret use: "python -c 'import os,base64; print base64.b64encode(os.urandom(16))'"
      containers:
      - args:
        - --provider=github
        - --github-org=ministryofjustice
        - --github-team=webops
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --client-id=$CLIENT_ID
        - --client-secret=$CLIENT_SECRET
        - --cookie-secret=$SESSION_SECRET
        - --redirect-url=https://grafana.apps.cloud-platform-test-1.k8s.integration.dsd.io/oauth2
        env:
        - name: CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: grafana-auth-secret
              key: client-id
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana-auth-secret
              key: client-secret
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana-auth-secret
              key: cookie-secret
        # Register a new application
        # https://github.com/settings/applications/new
        image: docker.io/machinedata/oauth2_proxy:latest
        imagePullPolicy: Always
        name: grafana-oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: grafana-oauth2-proxy
  name: grafana-oauth2-proxy
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: grafana-oauth2-proxy

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    "nginx.ingress.kubernetes.io/auth-url": "https://$host/oauth2/auth"
    "nginx.ingress.kubernetes.io/auth-signin": "https://$host/oauth2/start"
spec:
  rules:
  - host: grafana.apps.cloud-platform-test-1.k8s.integration.dsd.io
    http:
      paths:
      - backend:
          serviceName: kube-prometheus-grafana
          servicePort: 80
        path: /

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana-oauth2-proxy
  namespace: monitoring
spec:
  rules:
  - host: grafana.apps.cloud-platform-test-1.k8s.integration.dsd.io
    http:
      paths:
      - backend:
          serviceName: grafana-oauth2-proxy
          servicePort: 4180
        path: /oauth2
